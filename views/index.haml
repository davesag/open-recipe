-if !logged_in?
  %div.ui-widget{:style => 'width:75%;margin-top:1.5em; margin-left:auto; margin-right:auto;'}
    %div.ui-state-error.ui-corner-all{:style => 'padding: .7em; font-size:1.2em;'}
      %p<
        %span.ui-icon.ui-icon-alert{:style => 'float: left; margin-right: .3em'}
        %strong< You are not logged in.
      %p<
        You will need to <a href="/login">log in via facebook</a> and authorise us so we may
        access the data we need to operate this site for you.
      %p<
        Please see our
        %a{:href => '/privacy', :title => "Privacy Policy"}Privacy Policy
        for more details concerning the information we pull from Facebook and how we use it.
-else
  :javascript    
    $(window).resize(function() {
      setTimeout(function(){update_datatable_size('#recipe-list')}, 250);
    });
    
    $(function() {
      // first turn on the tabs.
      $('#recipes').tabs();
      // add a 'new recipe' button.
      $('#add-recipe').button({icons: {primary:'ui-icon-circle-plus'}}).click(function() {
        location.href = '/create-recipe';
      });
      // use the data in a dataTable.
      // the server will assign an ID to each row
      // using a tName param in the form {tName}-id-{recipe.id}
      // making it simple to parse out into the associated recipe's ID.
      $('#recipe-list').dataTable( {
        "bJQueryUI": true,
        "sPaginationType": "full_numbers",
        "sAjaxSource":"/recipes/datatable",
        "bProcessing":true,
        "bServerSide":false,
        'aaSorting': [[0, 'asc']],
        'bAutoWidth ':false,
        "aoColumns": [
          {"sTitle": "#{UnicodeUtils::titlecase(t.ui.name)}", "sType": 'string', 'sWidth': '25%'},
          {"sTitle": "#{UnicodeUtils::titlecase(t.ui.serves)}", "sType": 'string', 'sWidth': '10%', 'bSearchable': false, 'iDataSort': 5},
          {"sTitle": "#{UnicodeUtils::titlecase(t.ui.description)}", "sType": 'string', 'sWidth': '25%', 'bSortable': false},
          {"sTitle": "#{UnicodeUtils::titlecase(t.ui.preparation_time)}", "sType": 'string', 'sWidth': '20%', 'bSearchable': false, 'iDataSort': 6},
          {"sTitle": "#{UnicodeUtils::titlecase(t.ui.cooking_time)}", "sType": 'string', 'sWidth': '20%', 'bSearchable': false, 'iDataSort': 7},
          {"sType": 'numeric', 'bSearchable': false, 'bVisible': false},
          {"sType": 'numeric', 'bSearchable': false, 'bVisible': false},
          {"sType": 'numeric', 'bSearchable': false, 'bVisible': false},
        ],
        'fnServerParams': function (aoData) {
          aoData.push({'name':'tName', 'value':'recipe-list'});
        },
        'fnDrawCallback': function () {
          $(this.fnGetNodes()).click(function() {
            location.href = '/recipe/' + $(this).attr('id').substring('recipe-list-id-'.length);
          });
        }
      });
      // now load the user's favourite recipes into a table.
    });
  %h2 #{t.ui.greeting(UnicodeUtils::titlecase(active_user.name))}
  #recipes
    %ul
      %li<
        %a{:href => '#my-recipes'}< #{UnicodeUtils::titlecase(t.ui.my_recipes)}
      %li<
        %a{:href => '#my-favourite-recipes'}< #{UnicodeUtils::titlecase(t.ui.favourites)}
    #my-recipes
      - if active_user.recipes.empty?
        %p< #{Unicode::capitalize(t.warnings.not_added_any_recipies)}
      - else
        %table#recipe-list
      %button#add-recipe< #{UnicodeUtils::titlecase(t.ui.add_a_recipe)}
    #my-favourite-recipes
      - if active_user.favourite_recipes.empty?
        %p< #{Unicode::capitalize(t.warnings.not_favourited_any_recipes)}
      - else
        %table#favourite-recipe-list
