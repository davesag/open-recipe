%h2< Edit Recipe &#8220;#{Unicode::capitalize(recipe.name)}&#8221;
#edit-recipe.edit-or-create-recipe
  %form#recipe-form
    %input#recipe-name{:value => recipe.name}
    %input#serves{:style=>'width:3em;', :value=>recipe.serves}
    %textarea#description<= recipe.description
    - pt = dhhmm_from_seconds recipe.preparation_time
    %input#prep-time{:style=>'width:auto;margin-right:1em;', :value => pt}
    %label(for='cooking-time')< Cooking Time:
    - ct = dhhmm_from_seconds recipe.cooking_time
    %input#cooking-time{:style=>'width:auto;', :value => ct}
    %textarea#requirements<= recipe.requirements
    %label(for='ingredients')< Ingredients
    %table#ingredients
      %thead
        %tr
          %th< Ingredient Name
          %th< Amount
          %th< Unit
      %tbody
        -count = -1
        -for i in recipe.active_ingredients
          -count = count + 1
          %tr
            %td<
              %input.ingredient{:id => "ingredient#{count}", :value => i.ingredient.name}
            %td<
              %input.amount{:id => "amount#{count}", :value =>  i.quantity.amount}
            %td<
              %select.unit-menu{:id => "unit#{count}"}
                %option{:value => '', :label => Unicode::capitalize(t.unit.none), :selected => (i.quantity.unit == nil)}
                -for ut in UnitType.all
                  %optgroup{:label => Unicode::capitalize(ut.name)}
                    -for u in ut.allowed_units
                      %option{:value => u.id, :label => Unicode::capitalize(t.units[u.name]), :selected => (i.quantity.unit != nil && i.quantity.unit.id == u.id)}
        -count = count + 1
        %tr
          %td<
            %input.ingredient{:id => "ingredient#{count}"}
          %td<
            %input.amount{:id => "amount#{count}"}
          %td<
            %select.unit-menu{:id => "unit#{count}"}
              %option{:value => '', :label => Unicode::capitalize(t.unit.none), :selected => true}
              -for ut in UnitType.all
                %optgroup{:label => Unicode::capitalize(ut.name)}
                  -for u in ut.allowed_units
                    %option{:value => u.id, :label => Unicode::capitalize(t.units[u.name])}
    %textarea#the-method<= recipe.method
    %label(for='action-bar')< &nbsp;
    %span#action-bar.edit-or-create-recipe
      %input#choose-photo.action-button(type='submit')
      %input#save-recipe.action-button(type='submit')
      %input#cancel.action-button(type='reset')
:javascript
  var allowed_unit_options = #{allowed_units};
  var all_ingredient_names = #{ingredient_names}
  var default_allowed_unit_options = convert_to_options_html(allowed_unit_options);
  var recipe_id = #{recipe.id};
  var button_names = {
    'choose-photo': "#{UnicodeUtils::titlecase(t.ui.choose_photo)}",
    'save-recipe': "#{UnicodeUtils::titlecase(t.ui.save_recipe)}",
    'cancel': "#{UnicodeUtils::titlecase(t.ui.cancel)}"
  }
%script{:src => "/scripts/recipe_form_handlers.js"}
%script{:src => "/scripts/jquery.ui.form_sugar.js"}
:javascript
  $(function() {
    $("form#recipe-form").form_sugar({
      buttons: {
        'choose-photo': {label: "#{Unicode::capitalize(t.ui.choose_photo)}", handler: button_handlers['choose-photo']},
        'save-recipe': {label: "#{UnicodeUtils::titlecase(t.ui.edit_recipe)}", handler: button_handlers['save-recipe']},
        'cancel': {label: "#{Unicode::capitalize(t.ui.cancel)}", handler: button_handlers['cancel']}
      },

      fields: {
        'recipe-name': {
          label: "#{UnicodeUtils::titlecase(t.ui.recipe_name)}",
          validation: {
            required: true
          },
          messages: '#{t.errors.field.required}'
        },
        'serves': {
          label: "#{UnicodeUtils::titlecase(t.ui.serves)}",
          validation: {
            required: true,
            digits: true
          },
          messages: {
            required: '#{t.errors.field.required}',
            digits: '#{t.errors.field.integer}'
          }
        },
        'description': {label: "#{UnicodeUtils::titlecase(t.ui.description)}"},
        'prep-time': {
          label: "#{UnicodeUtils::titlecase(t.ui.preparation_time)}",
          validation: {
            duration: true
          },
          messages: "Invalid duration format."
        },
        'cooking-time': {
          label: "#{UnicodeUtils::titlecase(t.ui.cooking_time)}",
          validation: {
            duration: true
          },
          messages: "Invalid duration format."
        },
        'requirements': {label: "#{UnicodeUtils::titlecase(t.ui.requirements)}"},
        'the-method': {label: "#{UnicodeUtils::titlecase(t.ui.the_method)}"},
        'ingredients': {label: "#{UnicodeUtils::titlecase(t.ui.ingredients)}"}
      }
    });
  });
