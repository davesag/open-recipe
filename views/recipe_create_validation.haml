#new-recipe.edit-or-create-recipe
  %form#recipe-form
    %input#recipe-name(placeholder = 'What do you call your recipe?')
    %input#serves(style='width:3em;')
    %textarea#description
    %input#prep-time{:size => "10", :maxlength => "10", :placeholder => '1d 11m 11m', :style=>"width: auto;"}
    %input#cooking-time{:size => "10", :maxlength => "10", :placeholder => '1d 11h 11m', :style=>"width: auto;"}
    %textarea#requirements
    %label(for='ingredients')< #{UnicodeUtils::titlecase(t.ui.ingredients)}
    %table#ingredients
      %thead
        %tr
          %th< #{UnicodeUtils::titlecase(t.ui.ingredient_name)}
          %th< #{UnicodeUtils::titlecase(t.ui.amount)}
          %th< #{UnicodeUtils::titlecase(t.ui.unit)}
      %tbody
    %textarea#the-method
    %label(for='action-bar')< &nbsp;
    %span#action-bar.edit-or-create-recipe
      %input#choose-photo.action-button(type='submit')
      %input#save-recipe.action-button(type='submit')
      %input#cancel.action-button(type='reset')
:javascript
  // todo: make this an ajax call.
  var allowed_unit_options = #{allowed_units};
  // todo: make this an ajax call.
  var all_ingredient_names = #{ingredient_names}
  var default_allowed_unit_options = convert_to_options_html(allowed_unit_options);
  var recipe_id = 0;
%script{:src => "/scripts/recipe_form_handlers.js"}
%script{:src => "/scripts/jquery.ui.form_sugar.js"}
:javascript
  $(function() {
    $("form#recipe-form").form_sugar({
      buttons: {
        'choose-photo': {label: "#{Unicode::capitalize(t.ui.choose_photo)}", handler: button_handlers['choose-photo']},
        'save-recipe': {label: "#{UnicodeUtils::titlecase(t.ui.create_recipe)}", handler: button_handlers['save-recipe']},
        'cancel': {label: "#{Unicode::capitalize(t.ui.cancel)}", handler: button_handlers['cancel']}
      },

      fields: {
        'recipe-name': {
          label: "#{UnicodeUtils::titlecase(t.ui.recipe_name)}",
          validation: {
            required: true
          },
          messages: '#{t.errors.field.required}'
        },
        'serves': {
          label: "#{UnicodeUtils::titlecase(t.ui.serves)}",
          validation: {
            required: true,
            digits: true
          },
          messages: {
            required: '#{t.errors.field.required}',
            digits: '#{t.errors.field.integer}'
          }
        },
        'description': {label: "#{UnicodeUtils::titlecase(t.ui.description)}"},
        'prep-time': {
          label: "#{UnicodeUtils::titlecase(t.ui.preparation_time)}",
          validation: {
            duration: true
          },
          messages: "Invalid duration format."
        },
        'cooking-time': {
          label: "#{UnicodeUtils::titlecase(t.ui.cooking_time)}",
          validation: {
            duration: true
          },
          messages: "Invalid duration format."
        },
        'requirements': {label: "#{UnicodeUtils::titlecase(t.ui.requirements)}"},
        'the-method': {label: "#{UnicodeUtils::titlecase(t.ui.the_method)}"},
        'ingredients': {label: "#{UnicodeUtils::titlecase(t.ui.ingredients)}"}
      }
    });
  });
